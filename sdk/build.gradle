apply plugin: 'com.github.hierynomus.license'

ext {
    ver = [
        tokenProto: '1.0.263-SNAPSHOT',
        tokenRpc: '1.0.66',
        tokenSecurity: '1.0.31',
        tokenUtil: '1.0.13',
        retrofit: '2.2.0',
    ]
}

tasks.withType(Test) {
    // Pipe through the properties that we care about to tests.
    systemProperty 'TOKEN_GATEWAY', System.getProperty('TOKEN_GATEWAY', null)
    systemProperty 'TOKEN_BANK', System.getProperty('TOKEN_BANK', null)
    systemProperty 'TOKEN_USE_SSL', System.getProperty('TOKEN_USE_SSL', null)
}

publish {
    isPublic = true
}

dependencies {
    compile group: 'io.token.proto', name: 'tokenio-proto-external', version: ver.tokenProto
    compile group: 'io.token.rpc', name: 'tokenio-rpc-lib', version: ver.tokenRpc
    compile group: 'io.token.security', name: 'tokenio-security-lib', version: ver.tokenSecurity
    compile group: 'io.token.util', name: 'tokenio-util', version: ver.tokenUtil

    testCompile group: 'com.squareup.retrofit2', name: 'retrofit', version: ver.retrofit
    testCompile group: 'com.squareup.retrofit2', name: 'converter-scalars', version: ver.retrofit

    testCompile group: 'io.token.rpc', name: 'tokenio-rpc-testing', version: ver.tokenRpc
    testCompile group: 'io.token.security', name: 'tokenio-security-testing', version: ver.tokenSecurity
}

license {
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'Token, Inc.'
    ext.author = 'Token, Inc.'
    ext.email = 'info@token.io'

    include "**/*.java"
    exclude "**/*Test.java"
    exclude "**/gradle/**/*.java"
    exclude "**/testing/**/*.java"
    exclude "**/asserts/**/*.java"

    skipExistingHeaders = true
}

downloadLicenses {
    includeProjectDependencies = true
    dependencyConfiguration = 'compile'
}
